{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered"
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email already exists"
          }
        },
        "summary": "Register a new user",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Login a user",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "operationId": "AuthController_forgotPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email sent"
          }
        },
        "summary": "Request password reset",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password successfully reset"
          },
          "400": {
            "description": "Invalid or expired token"
          }
        },
        "summary": "Reset password with token",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/social-login": {
      "post": {
        "operationId": "AuthController_socialLogin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged in"
          },
          "400": {
            "description": "Invalid social login data"
          }
        },
        "summary": "Login via social media",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/admin/login": {
      "post": {
        "operationId": "AuthController_adminLogin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Admin successfully logged in"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "summary": "Admin login with fullName and password",
        "tags": [
          "auth"
        ]
      }
    },
    "/api/users/me": {
      "get": {
        "operationId": "UsersController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return the current user profile"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get current user profile",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UsersController_updateProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update current user profile",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all users"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all users (admin only)",
        "tags": [
          "users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the user"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get user by id (admin only)",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "UsersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update user (admin only)",
        "tags": [
          "users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete user (admin only)",
        "tags": [
          "users"
        ]
      }
    },
    "/api/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully"
          },
          "409": {
            "description": "Category with this name already exists"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new category",
        "tags": [
          "categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all categories"
          }
        },
        "summary": "Get all categories",
        "tags": [
          "categories"
        ]
      }
    },
    "/api/categories/by-type/{type}": {
      "get": {
        "operationId": "CategoriesController_findAllByType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return categories filtered by type"
          },
          "400": {
            "description": "Invalid category type"
          }
        },
        "summary": "Get categories by type",
        "tags": [
          "categories"
        ]
      }
    },
    "/api/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the category with products"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "summary": "Get a category by ID with products",
        "tags": [
          "categories"
        ]
      },
      "put": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Category updated successfully"
          },
          "404": {
            "description": "Category not found"
          },
          "409": {
            "description": "Category with this name already exists"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a category",
        "tags": [
          "categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "404": {
            "description": "Category not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a category",
        "tags": [
          "categories"
        ]
      }
    },
    "/api/products": {
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new product (chỉ nhận JSON, không upload ảnh trực tiếp)",
        "tags": [
          "products"
        ]
      },
      "get": {
        "operationId": "ProductsController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search term for product name or description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": false,
            "in": "query",
            "description": "Slug of the product to filter by",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "description": "Category ID to filter products",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPrice",
            "required": false,
            "in": "query",
            "description": "Minimum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maxPrice",
            "required": false,
            "in": "query",
            "description": "Maximum price",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "default": "createdAt",
              "type": "string",
              "enum": [
                "price",
                "name",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "DESC",
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return filtered products"
          }
        },
        "summary": "Get all products with filtering, sorting, and pagination",
        "tags": [
          "products"
        ]
      }
    },
    "/api/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the product"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "summary": "Get a product by ID",
        "tags": [
          "products"
        ]
      },
      "put": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a product",
        "tags": [
          "products"
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a product",
        "tags": [
          "products"
        ]
      }
    },
    "/api/services": {
      "post": {
        "operationId": "ServiceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Service"
        ]
      },
      "get": {
        "operationId": "ServiceController_findAll",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Số lượng dịch vụ tối đa muốn lấy (mặc định 10)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Số lượng dịch vụ muốn bỏ qua (mặc định 0)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "categoryId",
            "required": false,
            "in": "query",
            "description": "ID của danh mục để lọc dịch vụ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/api/services/{id}": {
      "get": {
        "operationId": "ServiceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service"
        ]
      },
      "put": {
        "operationId": "ServiceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service"
        ]
      },
      "delete": {
        "operationId": "ServiceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/api/posts": {
      "post": {
        "operationId": "PostsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully"
          },
          "409": {
            "description": "Post with this slug already exists"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new blog post",
        "tags": [
          "posts"
        ]
      },
      "get": {
        "operationId": "PostsController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search term",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "required": false,
            "in": "query",
            "description": "Filter by tag",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of posts per page",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return published posts"
          }
        },
        "summary": "Get all published blog posts",
        "tags": [
          "posts"
        ]
      }
    },
    "/api/posts/{slug}": {
      "get": {
        "operationId": "PostsController_findBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the post"
          },
          "404": {
            "description": "Post not found"
          }
        },
        "summary": "Get a blog post by slug",
        "tags": [
          "posts"
        ]
      }
    },
    "/api/posts/{id}": {
      "put": {
        "operationId": "PostsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully"
          },
          "404": {
            "description": "Post not found"
          },
          "409": {
            "description": "Post with this slug already exists"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a blog post",
        "tags": [
          "posts"
        ]
      },
      "delete": {
        "operationId": "PostsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        },
        "summary": "Delete a blog post",
        "tags": [
          "posts"
        ]
      }
    },
    "/api/contact": {
      "post": {
        "operationId": "ContactController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContactDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact form submitted successfully"
          }
        },
        "summary": "Submit a contact form",
        "tags": [
          "contact"
        ]
      },
      "get": {
        "operationId": "ContactController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all contact submissions"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all contact submissions (admin only)",
        "tags": [
          "contact"
        ]
      }
    },
    "/api/contact/{id}/read": {
      "put": {
        "operationId": "ContactController_markAsRead",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact marked as read"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mark contact as read (admin only)",
        "tags": [
          "contact"
        ]
      }
    },
    "/api/contact/{id}/replied": {
      "put": {
        "operationId": "ContactController_markAsReplied",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact marked as replied"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Mark contact as replied with notes (admin only)",
        "tags": [
          "contact"
        ]
      }
    },
    "/api/contact/{id}": {
      "delete": {
        "operationId": "ContactController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contact deleted successfully"
          },
          "404": {
            "description": "Contact not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a contact submission (admin only)",
        "tags": [
          "contact"
        ]
      }
    },
    "/api/upload-images": {
      "post": {
        "operationId": "UploadImagesController_uploadImages",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Chọn nhiều file ảnh"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Images uploaded successfully"
          }
        },
        "summary": "Upload nhiều ảnh",
        "tags": [
          "upload-images"
        ]
      }
    },
    "/api/store-info": {
      "post": {
        "operationId": "StoreInfoController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreInfoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "StoreInfo"
        ]
      },
      "get": {
        "operationId": "StoreInfoController_findOne",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StoreInfo"
        ]
      },
      "put": {
        "operationId": "StoreInfoController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreInfoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StoreInfo"
        ]
      },
      "delete": {
        "operationId": "StoreInfoController_remove",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "StoreInfo"
        ]
      }
    },
    "/api/banners": {
      "post": {
        "operationId": "BannersController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBannerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Banner đã được tạo thành công."
          }
        },
        "summary": "Tạo banner mới",
        "tags": [
          "banners"
        ]
      },
      "get": {
        "operationId": "BannersController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Trả về danh sách tất cả banner."
          }
        },
        "summary": "Lấy tất cả banner",
        "tags": [
          "banners"
        ]
      }
    },
    "/api/banners/{id}": {
      "get": {
        "operationId": "BannersController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Trả về banner theo ID."
          },
          "404": {
            "description": "Không tìm thấy banner."
          }
        },
        "summary": "Lấy banner theo ID",
        "tags": [
          "banners"
        ]
      },
      "put": {
        "operationId": "BannersController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBannerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Banner đã được cập nhật thành công."
          },
          "404": {
            "description": "Không tìm thấy banner."
          }
        },
        "summary": "Cập nhật banner theo ID",
        "tags": [
          "banners"
        ]
      },
      "delete": {
        "operationId": "BannersController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Banner đã được xóa thành công."
          },
          "404": {
            "description": "Không tìm thấy banner."
          }
        },
        "summary": "Xóa banner theo ID",
        "tags": [
          "banners"
        ]
      }
    },
    "/api/videos": {
      "post": {
        "operationId": "VideosController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVideoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Video created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDto"
                }
              }
            }
          }
        },
        "summary": "Create a new video",
        "tags": [
          "videos"
        ]
      },
      "get": {
        "operationId": "VideosController_findAll",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search term for video title",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "description": "Field to sort by",
            "schema": {
              "default": "createdAt",
              "type": "string",
              "enum": [
                "tieuDe",
                "createdAt",
                "updatedAt"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "description": "Sort order",
            "schema": {
              "default": "DESC",
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return videos with pagination info"
          }
        },
        "summary": "Get all videos with pagination and filtering",
        "tags": [
          "videos"
        ]
      }
    },
    "/api/videos/{id}": {
      "get": {
        "operationId": "VideosController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the video",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDto"
                }
              }
            }
          },
          "404": {
            "description": "Video not found"
          }
        },
        "summary": "Get a video by ID",
        "tags": [
          "videos"
        ]
      },
      "put": {
        "operationId": "VideosController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVideoDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDto"
                }
              }
            }
          },
          "404": {
            "description": "Video not found"
          }
        },
        "summary": "Update a video by ID",
        "tags": [
          "videos"
        ]
      },
      "delete": {
        "operationId": "VideosController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Video deleted successfully"
          },
          "404": {
            "description": "Video not found"
          }
        },
        "summary": "Delete a video by ID",
        "tags": [
          "videos"
        ]
      }
    },
    "/api/faq": {
      "post": {
        "operationId": "FaqController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFaqDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Faq"
        ]
      },
      "get": {
        "operationId": "FaqController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Faq"
        ]
      }
    },
    "/api/faq/{id}": {
      "get": {
        "operationId": "FaqController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Faq"
        ]
      },
      "put": {
        "operationId": "FaqController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFaqDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Faq"
        ]
      },
      "delete": {
        "operationId": "FaqController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Faq"
        ]
      }
    },
    "/api/faq/{slug}": {
      "get": {
        "operationId": "FaqController_findBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the FAQ"
          },
          "404": {
            "description": "FAQ not found"
          }
        },
        "summary": "Get an FAQ by slug",
        "tags": [
          "Faq"
        ]
      }
    },
    "/api/about": {
      "post": {
        "operationId": "AboutController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAboutDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "About"
        ]
      },
      "get": {
        "operationId": "AboutController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "About"
        ]
      }
    },
    "/api/about/{id}": {
      "get": {
        "operationId": "AboutController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "About"
        ]
      },
      "patch": {
        "operationId": "AboutController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAboutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "About"
        ]
      },
      "delete": {
        "operationId": "AboutController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "About"
        ]
      }
    },
    "/api/policy": {
      "post": {
        "operationId": "PolicyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePolicyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Policy"
        ]
      },
      "get": {
        "operationId": "PolicyController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/policy/{id}": {
      "get": {
        "operationId": "PolicyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Policy"
        ]
      },
      "put": {
        "operationId": "PolicyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePolicyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Policy"
        ]
      },
      "delete": {
        "operationId": "PolicyController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/policy/{slug}": {
      "get": {
        "operationId": "PolicyController_findBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the policy"
          },
          "404": {
            "description": "Policy not found"
          }
        },
        "summary": "Get a policy by slug",
        "tags": [
          "Policy"
        ]
      }
    },
    "/api/team": {
      "post": {
        "operationId": "TeamController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The team member has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          }
        },
        "summary": "Create a new team member",
        "tags": [
          "team"
        ]
      },
      "get": {
        "operationId": "TeamController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of all team members.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Team"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all team members",
        "tags": [
          "team"
        ]
      }
    },
    "/api/team/{id}": {
      "get": {
        "operationId": "TeamController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The found team member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Team member not found."
          }
        },
        "summary": "Get a team member by ID",
        "tags": [
          "team"
        ]
      },
      "patch": {
        "operationId": "TeamController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTeamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The team member has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Team"
                }
              }
            }
          },
          "404": {
            "description": "Team member not found."
          }
        },
        "summary": "Update a team member by ID",
        "tags": [
          "team"
        ]
      },
      "delete": {
        "operationId": "TeamController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The team member has been successfully deleted."
          },
          "404": {
            "description": "Team member not found."
          }
        },
        "summary": "Delete a team member by ID",
        "tags": [
          "team"
        ]
      }
    }
  },
  "info": {
    "title": "Đông Y Pharmacy API",
    "description": "The Đông Y Pharmacy REST API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user"
          },
          "password": {
            "type": "string",
            "description": "Password for the user account"
          }
        },
        "required": [
          "fullName",
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the user"
          },
          "password": {
            "type": "string",
            "description": "Password for the user account"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "ForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address of the user"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Reset password token"
          },
          "password": {
            "type": "string",
            "description": "New password for the user account"
          }
        },
        "required": [
          "token",
          "password"
        ]
      },
      "AdminLoginDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the admin"
          },
          "password": {
            "type": "string",
            "description": "Password for the admin account"
          }
        },
        "required": [
          "fullName",
          "password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email address of the user"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user"
          },
          "password": {
            "type": "string",
            "description": "Password for the user account"
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": [
              "user",
              "admin"
            ]
          },
          "avatarUrl": {
            "type": "string",
            "description": "URL to the user avatar image"
          },
          "resetPasswordToken": {
            "type": "string",
            "description": "Reset password token"
          },
          "resetPasswordExpires": {
            "format": "date-time",
            "type": "string",
            "description": "Reset password token expiration date"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Loại danh mục (product, service, post, video)"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục"
          },
          "slug": {
            "type": "string",
            "description": "Slug (url friendly)"
          },
          "description": {
            "type": "string",
            "description": "Mô tả danh mục"
          },
          "isActive": {
            "type": "boolean",
            "description": "Trạng thái hoạt động",
            "default": true
          },
          "sortOrder": {
            "type": "number",
            "description": "Thứ tự sắp xếp",
            "default": 0
          },
          "level": {
            "type": "number",
            "description": "Cấp độ danh mục",
            "default": 0
          }
        },
        "required": [
          "type",
          "name",
          "slug",
          "level"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Loại danh mục (product, service, post, video)"
          },
          "name": {
            "type": "string",
            "description": "Tên danh mục"
          },
          "slug": {
            "type": "string",
            "description": "Slug (url friendly)"
          },
          "description": {
            "type": "string",
            "description": "Description of the category"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the category is active"
          },
          "sortOrder": {
            "type": "number",
            "description": "Order for sorting categories"
          },
          "level": {
            "type": "number",
            "description": "Cấp độ danh mục"
          }
        }
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the product (unique identifier for URL)"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the product"
          },
          "price": {
            "type": "number",
            "description": "Regular price of the product"
          },
          "salePrice": {
            "type": "number",
            "description": "Sale price of the product"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL to the main product image"
          },
          "additionalImages": {
            "description": "Additional product images",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categoryId": {
            "type": "string",
            "description": "Category ID the product belongs to"
          }
        },
        "required": [
          "name",
          "slug",
          "description",
          "price"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the product (unique identifier for URL)"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the product"
          },
          "longDescription": {
            "type": "string",
            "description": "Long description of the product"
          },
          "price": {
            "type": "number",
            "description": "Regular price of the product"
          },
          "salePrice": {
            "type": "number",
            "description": "Sale price of the product"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL to the main product image"
          },
          "additionalImages": {
            "description": "Additional product images",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "categoryId": {
            "type": "string",
            "description": "Category ID the product belongs to"
          }
        }
      },
      "CreateServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên dịch vụ"
          },
          "slug": {
            "type": "string",
            "description": "Slug duy nhất của dịch vụ"
          },
          "categoryId": {
            "type": "string",
            "description": "ID danh mục dịch vụ"
          },
          "description": {
            "type": "string",
            "description": "Mô tả ngắn về dịch vụ"
          },
          "longdescription": {
            "type": "string",
            "description": "Mô tả chi tiết về dịch vụ"
          },
          "image": {
            "type": "string",
            "description": "URL hình ảnh dịch vụ"
          },
          "price": {
            "type": "number",
            "description": "Giá dịch vụ"
          },
          "salePrice": {
            "type": "number",
            "description": "Giá khuyến mãi dịch vụ"
          }
        },
        "required": [
          "name",
          "slug",
          "categoryId",
          "description",
          "longdescription",
          "image",
          "price"
        ]
      },
      "UpdateServiceDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePostDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the blog post"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly slug for the post"
          },
          "content": {
            "type": "string",
            "description": "Full content of the post in HTML/Markdown"
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the post"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL to the featured image"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Whether the post is published",
            "default": true
          },
          "tags": {
            "description": "Tags associated with the post",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorName": {
            "type": "string",
            "description": "Name of the post author"
          }
        },
        "required": [
          "title",
          "slug",
          "content"
        ]
      },
      "UpdatePostDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the blog post"
          },
          "slug": {
            "type": "string",
            "description": "URL-friendly slug for the post"
          },
          "content": {
            "type": "string",
            "description": "Full content of the post in HTML/Markdown"
          },
          "summary": {
            "type": "string",
            "description": "Short summary of the post"
          },
          "imageUrl": {
            "type": "string",
            "description": "URL to the featured image"
          },
          "isPublished": {
            "type": "boolean",
            "description": "Whether the post is published"
          },
          "tags": {
            "description": "Tags associated with the post",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "authorName": {
            "type": "string",
            "description": "Name of the post author"
          }
        }
      },
      "CreateContactDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Full name of the contact person"
          },
          "email": {
            "type": "string",
            "description": "Email address for reply"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the contact person"
          },
          "subject": {
            "type": "string",
            "description": "Subject of the contact message"
          },
          "message": {
            "type": "string",
            "description": "Content of the contact message"
          }
        },
        "required": [
          "name",
          "email",
          "subject",
          "message"
        ]
      },
      "CreateStoreInfoDto": {
        "type": "object",
        "properties": {
          "logo": {
            "type": "string",
            "description": "Store logo URL"
          },
          "favicon": {
            "type": "string",
            "description": "Store favicon URL"
          },
          "facebook": {
            "type": "string",
            "description": "Facebook page URL"
          },
          "youtube": {
            "type": "string",
            "description": "YouTube channel URL"
          },
          "googleMap": {
            "type": "string",
            "description": "Google Map embed URL"
          },
          "hotline": {
            "type": "string",
            "description": "Store hotline number"
          },
          "zalo": {
            "type": "string",
            "description": "Zalo contact information"
          },
          "workingHours": {
            "type": "string",
            "description": "Store working hours"
          }
        }
      },
      "UpdateStoreInfoDto": {
        "type": "object",
        "properties": {}
      },
      "CreateBannerDto": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "description": "URL ảnh banner"
          },
          "shortTitle": {
            "type": "string",
            "description": "Tiêu đề ngắn của banner"
          },
          "longTitle": {
            "type": "string",
            "description": "Tiêu đề dài của banner"
          },
          "link": {
            "type": "string",
            "description": "Link khi click vào banner"
          },
          "order": {
            "type": "number",
            "description": "Số thứ tự hiển thị banner"
          }
        },
        "required": [
          "imageUrl",
          "shortTitle",
          "order"
        ]
      },
      "CreateVideoDto": {
        "type": "object",
        "properties": {
          "tieuDe": {
            "type": "string",
            "description": "Title of the video"
          },
          "linkYtb": {
            "type": "string",
            "description": "YouTube link of the video"
          }
        },
        "required": [
          "tieuDe",
          "linkYtb"
        ]
      },
      "VideoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the video"
          },
          "tieuDe": {
            "type": "string",
            "description": "Title of the video"
          },
          "linkYtb": {
            "type": "string",
            "description": "YouTube link of the video"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          }
        },
        "required": [
          "id",
          "tieuDe",
          "linkYtb",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateVideoDto": {
        "type": "object",
        "properties": {
          "tieuDe": {
            "type": "string",
            "description": "Title of the video"
          },
          "linkYtb": {
            "type": "string",
            "description": "YouTube link of the video"
          }
        }
      },
      "CreateFaqDto": {
        "type": "object",
        "properties": {
          "tieuDe": {
            "type": "string",
            "description": "Tiêu đề FAQ"
          },
          "noiDung": {
            "type": "string",
            "description": "Nội dung FAQ"
          },
          "slug": {
            "type": "string",
            "description": "Slug cho FAQ"
          }
        },
        "required": [
          "tieuDe",
          "noiDung",
          "slug"
        ]
      },
      "UpdateFaqDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAboutDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Tiêu đề của About"
          },
          "content": {
            "type": "string",
            "description": "Nội dung của About"
          },
          "mission": {
            "type": "string",
            "description": "Sứ mệnh của công ty"
          },
          "vision": {
            "type": "string",
            "description": "Tầm nhìn của công ty"
          },
          "history": {
            "type": "string",
            "description": "Lịch sử của công ty"
          }
        }
      },
      "UpdateAboutDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePolicyDto": {
        "type": "object",
        "properties": {
          "tieuDe": {
            "type": "string",
            "description": "Tiêu đề chính sách"
          },
          "noiDung": {
            "type": "string",
            "description": "Nội dung chính sách"
          },
          "slug": {
            "type": "string",
            "description": "Slug cho chính sách"
          }
        },
        "required": [
          "tieuDe",
          "noiDung",
          "slug"
        ]
      },
      "UpdatePolicyDto": {
        "type": "object",
        "properties": {}
      },
      "CreateTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên thành viên nhóm"
          },
          "image": {
            "type": "string",
            "description": "Đường dẫn ảnh thành viên nhóm"
          },
          "description": {
            "type": "string",
            "description": "Mô tả về thành viên nhóm"
          }
        },
        "required": [
          "name",
          "image",
          "description"
        ]
      },
      "Team": {
        "type": "object",
        "properties": {}
      },
      "UpdateTeamDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Tên thành viên nhóm"
          },
          "image": {
            "type": "string",
            "description": "Đường dẫn ảnh thành viên nhóm"
          },
          "description": {
            "type": "string",
            "description": "Mô tả về thành viên nhóm"
          }
        }
      }
    }
  }
}